package server

import (
	"html/template"
	"io"
	"io/ioutil"
	"net/http"
	"net/http/httptest"
	"testing"

	"github.com/golangcollege/sessions"
	"github.com/jmoiron/sqlx"
	"github.com/mgeri/snippetbox/store"
	"github.com/rs/zerolog"
)

func newTestRequest(t *testing.T, method, url string, body io.Reader) *http.Request {
	r, err := http.NewRequest("GET", "/", nil)
	if err != nil {
		t.Fatal(err)
	}
	return r
}

func Test_application_ping(t *testing.T) {
	// enable parallel test
	t.Parallel()

	type fields struct {
		logger        *zerolog.Logger
		db            *sqlx.DB
		session       *sessions.Session
		templateCache map[string]*template.Template
		snippetStore  store.SnippetStore
		userStore     store.UserStore
	}
	type args struct {
		w *httptest.ResponseRecorder
		r *http.Request
	}
	tests := []struct {
		name       string
		fields     fields
		args       args
		wantResult int
		wantBody   string
	}{
		{
			name:   "OK",
			fields: fields{},
			args: args{
				w: httptest.NewRecorder(),
				r: newTestRequest(t, "GET", "/ping", nil),
			},
			wantResult: http.StatusOK,
			wantBody:   "OK",
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			app := &application{
				logger:        tt.fields.logger,
				db:            tt.fields.db,
				session:       tt.fields.session,
				templateCache: tt.fields.templateCache,
				snippetStore:  tt.fields.snippetStore,
				userStore:     tt.fields.userStore,
			}
			app.ping(tt.args.w, tt.args.r)

			// Call the Result() method on the http.ResponseRecorder to get the
			// http.Response generated by the ping handler.
			rs := tt.args.w.Result()

			// We can then examine the http.Response to check that the status code
			// written by the ping handler was 200.
			if rs.StatusCode != tt.wantResult {
				t.Errorf("want %d; got %d", tt.wantResult, rs.StatusCode)
			}

			if tt.wantBody != "" {
				defer rs.Body.Close()
				body, err := ioutil.ReadAll(rs.Body)
				if err != nil {
					t.Fatal(err)
				}

				if string(body) != tt.wantBody {
					t.Errorf("want body to equal %q", "OK")
				}
			}
		})
	}
}
